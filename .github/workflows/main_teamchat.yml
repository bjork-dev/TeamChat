# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app with Angular to Azure Web App - teamchat

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Step 1: Set up Node.js for Angular build
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22 

      # Step 2: Install Angular Dependencies
      - name: Install Angular Dependencies
        run: npm ci
        working-directory: ./teamchat-client

      # Step 3: Build Angular App
      - name: Build Angular App
        run: npm run build -- --configuration=production
        working-directory: ./teamchat-client

      # Step 4: Copy Angular build output to .NET app's wwwroot
      - name: Copy Angular build to .NET wwwroot
        run: |
          mkdir ./TeamChat.Server/wwwroot  # Create directory
          cp -r ./teamchat-client/dist/teamchat-client/browser/* ./TeamChat.Server/wwwroot/
        shell: bash

      # Step 5: Set up .NET Core
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '9.x'
          include-prerelease: false

      # Step 6: Build .NET app
      - name: Build with dotnet
        run: dotnet build --configuration Release
        working-directory: ./TeamChat.Server

      # Step 7: Publish .NET app
      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
        working-directory: ./TeamChat.Server

      # Step 8: Upload artifact for deployment job
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'teamchat'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_EF33918EC7C244469C4EF76970E70A40 }}
          package: .
